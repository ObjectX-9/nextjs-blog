name: Deploy to Sealos

env:
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
  OSS_BUCKET: ${{ secrets.OSS_BUCKET }}
  OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
  OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
  OSS_REGION: ${{ secrets.OSS_REGION }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

on:
  push:
    branches:
      - master # 监听 master 分支的 push 事件

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ 检出代码
        uses: actions/checkout@v4

      - name: 🔥 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 登录 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nextjs-blog:latest
            ${{ secrets.DOCKER_USERNAME }}/nextjs-blog:${{ github.sha }}
          build-args: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
            OSS_BUCKET=${{ secrets.OSS_BUCKET }}
            OSS_ACCESS_KEY_SECRET=${{ secrets.OSS_ACCESS_KEY_SECRET }}
            OSS_ACCESS_KEY_ID=${{ secrets.OSS_ACCESS_KEY_ID }}
            OSS_REGION=${{ secrets.OSS_REGION }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}

      - name: 🔧 设置 kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: 📋 配置 kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: 🔄 重启或刷新部署（无需等待）
        run: |
          if [[ "${{ steps.check-resources.outputs.app_exists }}" == "true" ]]; then
            echo "重启现有部署..."
            kubectl patch deployment nextjs-blog-v2 -n ns-londsz4v -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"kubectl.kubernetes.io/restartedAt\":\"$(date +%s)\"}}}}}"
          else
            echo "新部署已创建"
          fi
          echo "部署已提交，继续执行工作流"

      - name: 🔍 检查部署基本状态（不会阻塞）
        run: |
          echo "显示部署状态（不等待完成）："
          kubectl get deployment nextjs-blog-v2 -n ns-londsz4v
          echo "显示最新创建的Pod："
          kubectl get pods -l app=nextjs-blog-v2 -n ns-londsz4v -o wide --sort-by=.metadata.creationTimestamp | tail -3

      - name: ✅ 验证部署状态
        run: |
          kubectl get pods -l app=nextjs-blog-v2 -n ns-londsz4v
          kubectl get services nextjs-blog-v2-service -n ns-londsz4v
