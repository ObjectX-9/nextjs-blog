name: Deploy Next.js App

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # To use Turborepo Remote Caching, set the following environment variables for the job.
    # env:
    #   TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #   TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Create .env.local file
        run: |
          cat << EOF > .env.local
          OSS_REGION="${{ secrets.OSS_REGION }}"
          OSS_ACCESS_KEY_ID="${{ secrets.OSS_ACCESS_KEY_ID }}"
          OSS_ACCESS_KEY_SECRET="${{ secrets.OSS_ACCESS_KEY_SECRET }}"
          OSS_BUCKET="${{ secrets.OSS_BUCKET }}"
          MONGODB_URI="${{ secrets.MONGODB_URI }}"
          ADMIN_USERNAME="${{ secrets.ADMIN_USERNAME }}"
          ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
          EOF
          cat .env.local

      - name: Build
        run: pnpm build

      - name: Compress build output
        run: tar -czf build-output.tar.gz .next

      - name: Copy files via SCP
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PROJECT_PATH: ${{ vars.VPS_PROJECT_PATH }}
        run: |
          # 设置 SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $VPS_HOST >> ~/.ssh/known_hosts

          # 复制文件
          scp build-output.tar.gz $VPS_USER@$VPS_HOST:$VPS_PROJECT_PATH/
          scp .env.local $VPS_USER@$VPS_HOST:$VPS_PROJECT_PATH/

      - name: Deploy to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PROJECT_PATH: ${{ vars.VPS_PROJECT_PATH }}
        run: |
          ssh $VPS_USER@$VPS_HOST "cd $VPS_PROJECT_PATH && \
            tar -xzf build-output.tar.gz && \
            rm build-output.tar.gz && \
            pm2 restart shortcuts --update-env || pm2 start 'pnpm start' --name shortcuts"
